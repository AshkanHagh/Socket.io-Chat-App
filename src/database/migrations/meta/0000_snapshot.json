{
  "id": "cfb09092-a90a-4fd7-b0af-da922d7a0e1f",
  "prevId": "00000000-0000-0000-0000-000000000000",
  "version": "7",
  "dialect": "postgresql",
  "tables": {
    "public.comments": {
      "name": "comments",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "authorId": {
          "name": "authorId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "text": {
          "name": "text",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "createdAt": {
          "name": "createdAt",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        },
        "updatedAt": {
          "name": "updatedAt",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        }
      },
      "indexes": {},
      "foreignKeys": {
        "comments_authorId_users_id_fk": {
          "name": "comments_authorId_users_id_fk",
          "tableFrom": "comments",
          "tableTo": "users",
          "columnsFrom": [
            "authorId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {}
    },
    "public.followers": {
      "name": "followers",
      "schema": "",
      "columns": {
        "followerId": {
          "name": "followerId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "followedId": {
          "name": "followedId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {},
      "foreignKeys": {
        "followers_followerId_users_id_fk": {
          "name": "followers_followerId_users_id_fk",
          "tableFrom": "followers",
          "tableTo": "users",
          "columnsFrom": [
            "followerId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "followers_followedId_users_id_fk": {
          "name": "followers_followedId_users_id_fk",
          "tableFrom": "followers",
          "tableTo": "users",
          "columnsFrom": [
            "followedId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {
        "followers_followerId_followedId_pk": {
          "name": "followers_followerId_followedId_pk",
          "columns": [
            "followerId",
            "followedId"
          ]
        }
      },
      "uniqueConstraints": {}
    },
    "public.notifications": {
      "name": "notifications",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "from": {
          "name": "from",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "to": {
          "name": "to",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "type": {
          "name": "type",
          "type": "type",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": false
        },
        "read": {
          "name": "read",
          "type": "boolean",
          "primaryKey": false,
          "notNull": false,
          "default": false
        },
        "createdAt": {
          "name": "createdAt",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        },
        "updatedAt": {
          "name": "updatedAt",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        }
      },
      "indexes": {},
      "foreignKeys": {
        "notifications_from_users_id_fk": {
          "name": "notifications_from_users_id_fk",
          "tableFrom": "notifications",
          "tableTo": "users",
          "columnsFrom": [
            "from"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "notifications_to_users_id_fk": {
          "name": "notifications_to_users_id_fk",
          "tableFrom": "notifications",
          "tableTo": "users",
          "columnsFrom": [
            "to"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {}
    },
    "public.post_comments": {
      "name": "post_comments",
      "schema": "",
      "columns": {
        "commentId": {
          "name": "commentId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "postId": {
          "name": "postId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {},
      "foreignKeys": {
        "post_comments_commentId_comments_id_fk": {
          "name": "post_comments_commentId_comments_id_fk",
          "tableFrom": "post_comments",
          "tableTo": "comments",
          "columnsFrom": [
            "commentId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "post_comments_postId_posts_id_fk": {
          "name": "post_comments_postId_posts_id_fk",
          "tableFrom": "post_comments",
          "tableTo": "posts",
          "columnsFrom": [
            "postId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {
        "post_comments_postId_commentId_pk": {
          "name": "post_comments_postId_commentId_pk",
          "columns": [
            "postId",
            "commentId"
          ]
        }
      },
      "uniqueConstraints": {}
    },
    "public.post_likes": {
      "name": "post_likes",
      "schema": "",
      "columns": {
        "userId": {
          "name": "userId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "postId": {
          "name": "postId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {},
      "foreignKeys": {
        "post_likes_userId_users_id_fk": {
          "name": "post_likes_userId_users_id_fk",
          "tableFrom": "post_likes",
          "tableTo": "users",
          "columnsFrom": [
            "userId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "post_likes_postId_posts_id_fk": {
          "name": "post_likes_postId_posts_id_fk",
          "tableFrom": "post_likes",
          "tableTo": "posts",
          "columnsFrom": [
            "postId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {
        "post_likes_postId_userId_pk": {
          "name": "post_likes_postId_userId_pk",
          "columns": [
            "postId",
            "userId"
          ]
        }
      },
      "uniqueConstraints": {}
    },
    "public.posts": {
      "name": "posts",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "userId": {
          "name": "userId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "text": {
          "name": "text",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "image": {
          "name": "image",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {},
      "foreignKeys": {
        "posts_userId_users_id_fk": {
          "name": "posts_userId_users_id_fk",
          "tableFrom": "posts",
          "tableTo": "users",
          "columnsFrom": [
            "userId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {}
    },
    "public.replies": {
      "name": "replies",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "commentId": {
          "name": "commentId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "authorId": {
          "name": "authorId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "text": {
          "name": "text",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "createdAt": {
          "name": "createdAt",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        },
        "updatedAt": {
          "name": "updatedAt",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        }
      },
      "indexes": {},
      "foreignKeys": {
        "replies_commentId_comments_id_fk": {
          "name": "replies_commentId_comments_id_fk",
          "tableFrom": "replies",
          "tableTo": "comments",
          "columnsFrom": [
            "commentId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "replies_authorId_users_id_fk": {
          "name": "replies_authorId_users_id_fk",
          "tableFrom": "replies",
          "tableTo": "users",
          "columnsFrom": [
            "authorId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {}
    },
    "public.save_posts": {
      "name": "save_posts",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "postId": {
          "name": "postId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "userId": {
          "name": "userId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {},
      "foreignKeys": {
        "save_posts_postId_posts_id_fk": {
          "name": "save_posts_postId_posts_id_fk",
          "tableFrom": "save_posts",
          "tableTo": "posts",
          "columnsFrom": [
            "postId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        },
        "save_posts_userId_users_id_fk": {
          "name": "save_posts_userId_users_id_fk",
          "tableFrom": "save_posts",
          "tableTo": "users",
          "columnsFrom": [
            "userId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {}
    },
    "public.profiles": {
      "name": "profiles",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "userId": {
          "name": "userId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "fullName": {
          "name": "fullName",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": false
        },
        "bio": {
          "name": "bio",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": false
        },
        "profilePic": {
          "name": "profilePic",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "gender": {
          "name": "gender",
          "type": "gender",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": false
        },
        "isBan": {
          "name": "isBan",
          "type": "boolean",
          "primaryKey": false,
          "notNull": false,
          "default": false
        }
      },
      "indexes": {},
      "foreignKeys": {
        "profiles_userId_users_id_fk": {
          "name": "profiles_userId_users_id_fk",
          "tableFrom": "profiles",
          "tableTo": "users",
          "columnsFrom": [
            "userId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {}
    },
    "public.users": {
      "name": "users",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "username": {
          "name": "username",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": true
        },
        "email": {
          "name": "email",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": true
        },
        "role": {
          "name": "role",
          "type": "role",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": false,
          "default": "'user'"
        },
        "password": {
          "name": "password",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": true
        },
        "createdAt": {
          "name": "createdAt",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        },
        "updatedAt": {
          "name": "updatedAt",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        }
      },
      "indexes": {
        "emailIndex": {
          "name": "emailIndex",
          "columns": [
            {
              "expression": "email",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "usernameIndex": {
          "name": "usernameIndex",
          "columns": [
            {
              "expression": "username",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {}
    }
  },
  "enums": {
    "public.type": {
      "name": "type",
      "schema": "public",
      "values": [
        "like",
        "follow"
      ]
    },
    "public.gender": {
      "name": "gender",
      "schema": "public",
      "values": [
        "male",
        "female"
      ]
    },
    "public.role": {
      "name": "role",
      "schema": "public",
      "values": [
        "user",
        "admin",
        "manager"
      ]
    }
  },
  "schemas": {},
  "_meta": {
    "columns": {},
    "schemas": {},
    "tables": {}
  }
}